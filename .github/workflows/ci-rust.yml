---
name: Rust CI

"on":
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    strategy:
      fail-fast: false
      matrix:
        job:
          - clippy
          - machete
        include:
          - job: rustfmt
            toolchain: nightly
            components: rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - if: ${{ matrix.toolchain }}
        name: Setup rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          components: ${{ matrix.components }}
      - if: ${{ ! matrix.toolchain }}
        name: Setup rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - uses: taiki-e/install-action@v2
        with:
          tool: just,cargo-machete
      - name: Lint
        run: just ci-lint-${{ matrix.job }}
  test:
    strategy:
      fail-fast: false
      matrix:
        job:
          - mem
          - rust
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install poetry & deps
        shell: bash
        run: |
          pipx install poetry || true
      - name: Setup python and restore poetry
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"
          cache: "poetry"
      - name: Install Python dependencies
        run: poetry install
      - name: Setup rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - uses: taiki-e/install-action@v2
        with:
          tool: just
      - name: Lint
        run: just ci-test-${{ matrix.job }}
